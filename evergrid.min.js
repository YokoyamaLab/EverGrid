(()=>{"use strict";const e={classPrefix:"evergrid-",classSuffixGrid:"grid",classSuffixCell:"cell",defaultGridGap:"20px",widthPerHeight:1};let t=0;const r=t=>{const r=t.getElementsByClassName(e.classPrefix+e.classSuffixCell).length,s=getComputedStyle(t);let l={width:t.clientWidth,height:t.clientHeight};l.height-=parseFloat(s.paddingTop)+parseFloat(s.paddingBottom),l.width-=parseFloat(s.paddingLeft)+parseFloat(s.paddingRight);let d={h:1,w:1};for(;d.w*d.h<r;)i(d,l.width,l.height)?d.w++:d.h++;t.style.setProperty("grid-template-columns","repeat("+d.w+", 1fr)"),t.style.setProperty("grid-template-rows","repeat("+d.h+", 1fr)")},i=(t,r,i)=>{const s=t.w,l=t.h,d=r/(s+1)/(i/l),a=r/s/(i/(l+1));return Math.abs(e.widthPerHeight-d)<Math.abs(e.widthPerHeight-a)},s=(new ResizeObserver((e=>{for(let t of e)r(t.target)})),new MutationObserver((t=>{t.forEach((t=>{let i={};t.addedNodes.forEach((t=>{t.classList.contains(e.classPrefix+e.classSuffixCell)&&(s(t,t.parentNode.getAttribute("x-evergrid-id")),i[t.parentNode.getAttribute("x-evergrid-id")]=t.parentNode)})),t.removedNodes.forEach((t=>{if(t.classList.contains(e.classPrefix+e.classSuffixCell)){const r=document.querySelector("."+e.classPrefix+e.classSuffixGrid+"[x-evergrid-id='"+t.getAttribute("x-evergrid-belong-to")+"']");i[r.getAttribute("x-evergrid-id")]=r}}));for(let e in i)r(i[e])}))})),(e,r)=>{if(null==e.getAttribute("x-evergrid-id")){const i=t++;return e.setAttribute("x-evergrid-id",i),e.setAttribute("x-evergrid-belong-to",r),e.style.setProperty("overflow","hidden"),i}return!1})})();